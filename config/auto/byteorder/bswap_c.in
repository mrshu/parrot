/*
Copyright (C) 2012, Parrot Foundation.

*/

#include <stdlib.h>
#include <stdio.h>
#include <stdint.h>

#ifdef PARROT_HAS_HEADER_BYTESWAP
#  include <byteswap.h>                    /* GNU */
#  ifndef bswap_16
#    define bswap_16(x) __bswap_16(x)
#    define bswap_32(x) __bswap_32(x)
#    define bswap_64(x) __bswap_64(x)
#  endif
#elif defined(PARROT_HAS_HEADER_ENDIAN) \
      || defined(PARROT_HAS_HEADER_SYS_ENDIAN)
#  ifdef PARROT_HAS_HEADER_ENDIAN                 /* linux */
#    include <endian.h>
#  elif defined(PARROT_HAS_HEADER_SYS_ENDIAN)	   /* FreeBSD */
#    include <sys/endian.h>
#  endif
#  define bswap_16(x) __bswap_16(x)
#  define bswap_32(x) __bswap_32(x)
#  ifdef __bswap_64
#      define bswap_64(x) __bswap_64(x)
#  endif
#elif defined(PARROT_HAS_HEADER_LIBKERN_OSBYTEORDER) && defined(__APPLE__)
#  include <libkern/OSByteOrder.h>
#  define bswap_16(x) OSSwapInt16(x)
#  define bswap_32(x) OSSwapInt32(x)
#  ifdef OSSwapInt64
#    define bswap_64(x) OSSwapInt64(x)
#  endif
#elif defined(PARROT_HAS_HEADER_MACHINE_ENDIAN) && defined(__APPLE__)
#  include <machine/endian.h>
#  define bswap_16(x) __DARWIN_OSSwapInt16(x)
#  define bswap_32(x) __DARWIN_OSSwapInt32(x)
#  ifdef __DARWIN_OSSwapInt64
#    define bswap_64(x) __DARWIN_OSSwapInt64(x)
#  endif
#elif defined(PARROT_HAS_HEADER_SYS_BYTEORDER)
#  define bswap_16(x) BSWAP_16(x)
#  define bswap_32(x) BSWAP_32(x)
#  ifdef BSWAP_64
#    define bswap_64(x) BSWAP_64(x)
#  endif
#elif defined(__MSC_VER)
#  define bswap_16(x) _byteswap_ushort(x)
#  define bswap_32(x) _byteswap_ulong(x)
#  ifdef _byteswap_uint64
#    define bswap_64(x) _byteswap_uint64(x)
#  endif
#endif

int
main()
{
    unsigned long l = 0x12345678;
    l = bswap_16((short)l);
    l = bswap_32(l);
#if __WORDSIZE == 64
    l = bswap_64(l);
#endif
    printf("0x%lx", l);
    return EXIT_SUCCESS;
}

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4 cinoptions='\:2=2' :
 */
